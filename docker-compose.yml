version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mini-stripe-db
    environment:
      POSTGRES_DB: mini_stripe
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - mini-stripe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend API
  api:
    build: .
    container_name: mini-stripe-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mini_stripe
      DB_USER: postgres
      DB_PASSWORD: password
      DATABASE_URL: postgresql://postgres:password@postgres:5432/mini_stripe
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 24h
      BCRYPT_ROUNDS: 12
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      MOCK_BANK_API_URL: http://mock-bank:3001
      MOCK_BANK_API_KEY: dev-mock-bank-key
      PAYMENT_LINK_EXPIRY_HOURS: 24
      PAYMENT_LINK_BASE_URL: http://localhost:3000/pay
      LOG_LEVEL: debug
      CORS_ORIGIN: http://localhost:3000,http://localhost:3001
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mini-stripe-network
    restart: unless-stopped

  # Mock Bank API Service
  mock-bank:
    image: node:18-alpine
    container_name: mini-stripe-mock-bank
    ports:
      - "3001:3001"
    working_dir: /app
    volumes:
      - ./mock-bank:/app
    command: >
      sh -c "npm install && npm start"
    environment:
      NODE_ENV: development
      PORT: 3001
    networks:
      - mini-stripe-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mini-stripe-network:
    driver: bridge 